ANALYZER s("s")
s.setAnalyzer("run47_all_devices_365nm_20ns_3V8/analyzed.root")
s.kch = 4; s.persistence_plot(1325,-300,5000,16, "Ch4.charge/6000>65 && Ch4.charge/6000 < 80")
s.averageWaveform(0,"use_mine")
s.haverage[4]->Draw("SAMES")
TH1D *hrise = new TH1D("hrise","hrise",140,20,90)
s.gen_rise_time(4, {8000,10200}, true, {10300,10600},16,hrise,"use_mine")
hrise->Draw()
s.haverage[4]->Draw("")
s.rise_time(4, {8000,10200}, true, {10300,10600},true)
s.haverage[4]->Scale(100./s.haverage[4]->GetMaximum())
s.haverage[4]->GetMaximum()
s.haverage[4]->Draw("")


s.setAnalyzer("run49_all_devices_365nm_20ns_4V2/analyzed.root")
s.kch = 6; s.persistence_plot(1325,-300,5000,16, "Ch6.charge/2500>95 && Ch6.charge/2500 < 120 && Ch6.selection==0")
s.averageWaveform(0,"use_mine")
s.haverage[6]->Draw("SAMES")
TH1D *hrise = new TH1D("hrise","hrise",140,20,90)
s.gen_rise_time(6, {8000,10200}, true, {10300,10600},16,hrise,"use_mine")
hrise->Draw()
s.haverage[6]->Draw("")
s.rise_time(6, {8000,10200}, true, {10300,10600},true)
s.haverage[6]->Scale(100./s.haverage[6]->GetMaximum())
s.haverage[6]->GetMaximum()
s.haverage[6]->Draw("")


s.setAnalyzer("run47_all_devices_365nm_20ns_3V8/analyzed.root")
s.kch = 2; s.persistence_plot(1325,-300,5000,16, "Ch2.charge/1300 >95 && Ch2.charge/1300 < 120 && Ch2.selection==0")
s.averageWaveform(0,"use_mine")
s.haverage[2]->Draw("SAMES")
TH1D *hrise = new TH1D("hrise","hrise",120,80,140)
s.gen_rise_time(2, {8000,10200}, true, {10300,10600},16,hrise,"use_mine")
hrise->Draw()
s.haverage[2]->Draw("")
s.rise_time(2, {8000,10200}, true, {10300,10600},true)
s.haverage[2]->Scale(100./s.haverage[2]->GetMaximum())
s.haverage[2]->GetMaximum()
s.haverage[2]->Draw("")



s.setAnalyzer("run52_all_devices_365nm_20ns_4V8/analyzed.root")
s.kch = 7; s.persistence_plot(1325,-300,5000,16, "Ch7.charge/2800 > 47 && Ch7.charge/2800 < 60 && Ch7.selection==0")
s.averageWaveform(0,"use_mine")
s.haverage[7]->Draw("SAMES")
TH1D *hrise = new TH1D("hrise","hrise",120,80,140)
s.gen_rise_time(7, {8000,10200}, true, {10300,10600},16,hrise,"use_mine")
hrise->Draw()
s.haverage[7]->Draw("")
s.rise_time(7, {8000,10200}, true, {10300,10600},true)
s.haverage[7]->Scale(100./s.haverage[7]->GetMaximum())
s.haverage[7]->GetMaximum()
s.haverage[7]->Draw("")


//for extra plots
#define memorydepth 5000
.L /home/henrique/Dropbox/APC_Paris/Root/cold_box_analysis/class/MYCODES.h
ANALYZER s
s.setAnalyzer("run47_all_devices_365nm_20ns_3V8/analyzed.root")
ANALYZER z
z.setAnalyzer("run49_all_devices_365nm_20ns_4V2/analyzed.root")
s.kch = 2; s.averageWaveform(0)
z.kch = 2; z.averageWaveform(0)
s.haverage [2]->Draw()
z.haverage [2]->Draw("SAME")
ANALYZER g
g.setAnalyzer("run51_all_devices_365nm_20ns_4V6/analyzed.root")
g.kch = 2; g.averageWaveform(0)
norm(s.haverage [2])
void norm(TH1D* h){while(h->GetMaximum()!=100){h->Scale(100./h->GetMaximum()); h->SetLineWidth(3); h->GetYaxis()->SetTitle("Amplitude (%)");}}
norm(s.haverage [2])
norm(z.haverage [2])
norm(g.haverage [2])
s.haverage [2]->SetLineColor(kGreen+2)
z.haverage [2]->SetLineColor(kBlack)
g.haverage [2]->SetLineColor(kBlue)
g.haverage [2]->Draw("SAME")
s.haverage[2]->SetTitle("3.8V, ~100 pe")
z.haverage[2]->SetTitle("4.2V, ~270 pe")
g.haverage[2]->SetTitle("4.6V, ~470 pe")
c1->BuildLegend()
